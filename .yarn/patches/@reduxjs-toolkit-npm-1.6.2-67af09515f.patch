diff --git a/dist/index.js b/dist/index.js
index 6b889a8c93e4c546dd2b1905c968ade143435134..8a63cf3cbc152d84864e1cec07da5c0883a98aef 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -1,6 +1,2 @@
 'use strict'
-if (process.env.NODE_ENV === 'production') {
-  module.exports = require('./redux-toolkit.cjs.production.min.js')
-} else {
-  module.exports = require('./redux-toolkit.cjs.development.js')
-}
\ No newline at end of file
+module.exports = require('./redux-toolkit.cjs.development.js')
diff --git a/dist/redux-toolkit.cjs.development.js b/dist/redux-toolkit.cjs.development.js
index a59c40df338d9dc5ad1f47662f4906808722d72b..c28781637c29c3864b1dd7b8bd43527ddc6048e6 100644
--- a/dist/redux-toolkit.cjs.development.js
+++ b/dist/redux-toolkit.cjs.development.js
@@ -1,3 +1,13 @@
+function __define(obj, key, value) {
+    Object.defineProperty(obj, key, {
+        value: value,
+        enumerable: true,
+        configurable: true,
+        writable: true
+    });
+    return obj[key];
+}
+
 var __extends = (this && this.__extends) || (function () {
     var extendStatics = function (d, b) {
         extendStatics = Object.setPrototypeOf ||
@@ -9,7 +19,7 @@ var __extends = (this && this.__extends) || (function () {
         if (typeof b !== "function" && b !== null)
             throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
         extendStatics(d, b);
-        function __() { this.constructor = d; }
+        function __() { __define(this, constructor, d); }
         d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
     };
 })();
@@ -115,7 +125,7 @@ var __async = function (__this, __arguments, generator) {
 // src/index.ts
 __markAsModule(exports);
 __export(exports, {
-    MiddlewareArray: function () { return MiddlewareArray; },
+    // MiddlewareArray: function () { return MiddlewareArray; },
     configureStore: function () { return configureStore; },
     createAction: function () { return createAction; },
     createAsyncThunk: function () { return createAsyncThunk; },
@@ -237,14 +247,14 @@ var MiddlewareArray = /** @class */ (function (_super) {
         enumerable: false,
         configurable: true
     });
-    MiddlewareArray.prototype.concat = function () {
+    __define(MiddlewareArray.prototype, 'concat', function () {
         var arr = [];
         for (var _i = 0; _i < arguments.length; _i++) {
             arr[_i] = arguments[_i];
         }
         return _super.prototype.concat.apply(this, arr);
-    };
-    MiddlewareArray.prototype.prepend = function () {
+    });
+    __define(MiddlewareArray.prototype, 'prepend', function () {
         var arr = [];
         for (var _i = 0; _i < arguments.length; _i++) {
             arr[_i] = arguments[_i];
@@ -253,7 +263,7 @@ var MiddlewareArray = /** @class */ (function (_super) {
             return new (MiddlewareArray.bind.apply(MiddlewareArray, __spreadArray([void 0], arr[0].concat(this))))();
         }
         return new (MiddlewareArray.bind.apply(MiddlewareArray, __spreadArray([void 0], arr.concat(this))))();
-    };
+    });
     return MiddlewareArray;
 }(Array));
 // src/immutableStateInvariantMiddleware.ts
